/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.87
 * Generated at: 2023-04-20 10:31:30 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class ex01_005fjson_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("    <!-- JSON(JavaScript Object Notation) 표기법\r\n");
      out.write("    	서로 다른 프로그램에서 데이터를 교환하기 편하도록 규격화된 표기법 -->\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("	<head>\r\n");
      out.write("		<meta charset=\"UTF-8\">\r\n");
      out.write("		<title>Insert title here</title>\r\n");
      out.write("		<script type=\"text/javascript\">\r\n");
      out.write("			//{'키' : '값'}\r\n");
      out.write("			//값에 넣을 수 있는 데이터\r\n");
      out.write("			//숫자 : 정수, 실수, 지수 -> JSON에서는 8진수나 16진수를 표기하는법이 없다.\r\n");
      out.write("			//문자열\r\n");
      out.write("			//논리형 : true, false\r\n");
      out.write("			//객체\r\n");
      out.write("			//배열\r\n");
      out.write("			//null\r\n");
      out.write("			\r\n");
      out.write("			var p = {'name' : '홍길동', 'age' :20, 'tel' : '010-1111-1111'};\r\n");
      out.write("			\r\n");
      out.write("			document.write(\"이름 : \" + p.name + \"<br>\");\r\n");
      out.write("			document.write(\"나이 : \" + p.age + \"<br>\");\r\n");
      out.write("			document.write(\"번호 : \" + p.tel + \"<br>\");\r\n");
      out.write("			\r\n");
      out.write("			document.write(\"<hr>\");\r\n");
      out.write("			\r\n");
      out.write("			//JSON 1차원 배열\r\n");
      out.write("			var p_arr = [\r\n");
      out.write("						 {'name' : '홍길동','age' : 20, 'tel' : '010-1111-1111'},\r\n");
      out.write("						 {'name' : '이길동', 'age' : 30, 'tel' : '010-2222-2222'}\r\n");
      out.write("					    ];	\r\n");
      out.write("			\r\n");
      out.write("			document.write(p_arr[0].name + \" / \" + p_arr[0].age + \"<br>\");\r\n");
      out.write("			document.write(p_arr[1].name + \" / \" + p_arr[1].age + \"<br>\");\r\n");
      out.write("			\r\n");
      out.write("			//JSON 다차원 배열\r\n");
      out.write("			var course = {'name': '웹앱개발',\r\n");
      out.write("						  'start' : '2023-02-13',\r\n");
      out.write("						  'end' : '2030-07-07',\r\n");
      out.write("						  'sub' : ['java','jsp','spring'],\r\n");
      out.write("						  'student' : [{'name' : '홍길동','age' : 20},{'name' : '이길동','age' : 30}]\r\n");
      out.write("						  };\r\n");
      out.write("			\r\n");
      out.write("			document.write(\"<hr>\");\r\n");
      out.write("			document.write(\"과목명 : \" + course.name + \"<br>\");\r\n");
      out.write("			document.write(\"시작일 : \" + course.start + \"<br>\");\r\n");
      out.write("			document.write(\"종료일 : \" + course.end + \"<br>\");\r\n");
      out.write("			document.write(\"과목 : \" + course.sub[0] + \",\" + course.sub[1] + \",\" + course.sub[2] + \"<br>\");\r\n");
      out.write("			document.write(\"학생 : \" + course.student[0].name + \" / \" + course.student[0].age + \"<br>\");\r\n");
      out.write("		</script>\r\n");
      out.write("	</head>\r\n");
      out.write("	<body>\r\n");
      out.write("		\r\n");
      out.write("	</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
